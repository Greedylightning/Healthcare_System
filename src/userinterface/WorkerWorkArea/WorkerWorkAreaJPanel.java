/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WorkerWorkArea;

import business.enterprise.Enterprise;
import business.enterprise.MedicineEnterprise;
import business.medicine.MedicineStock;
import business.organization.DoctorOrganization;
import business.organization.WorkerOrganization;
import business.useraccount.UserAccount;
import business.workqueue.MedicineProduceTask;
import business.workqueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zack
 */
public class WorkerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form WorkerWorkAreaJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount account;
    WorkerOrganization organization;
    MedicineEnterprise enterprise;
    public WorkerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, WorkerOrganization organization,MedicineEnterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        populateTaskTable();
        populateMyTaskTable();
    }

    public void populateTaskTable(){
        DefaultTableModel model = (DefaultTableModel) taskJTable.getModel();
        model.setRowCount(0);
        for(MedicineProduceTask task : enterprise.getTaskCatalog()){
            Object[] row = new Object[4];
            row[0] = task.getId();
            row[1] = task;
            row[2] = task.getAmount();
            row[3] = task.getRemaining();
            model.addRow(row);
        }
    }
    
    public void populateMyTaskTable(){
        DefaultTableModel model = (DefaultTableModel) mytaskJTable.getModel();
        model.setRowCount(0);
        for(WorkRequest request : account.getWorkQueue().getWorkRequestCatalog()){
            Object[] row = new Object[4];
            row[0] = ((MedicineProduceTask) request).getId();
            row[1] = ((MedicineProduceTask) request);
            row[2] = ((MedicineProduceTask) request).getAmount();
            row[3] = ((MedicineProduceTask) request).getStatus();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taskJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        workloadJTextField = new javax.swing.JTextField();
        assignJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mytaskJTable = new javax.swing.JTable();
        completeJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        taskJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Medicine Name", "Amount", "Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taskJTable);
        if (taskJTable.getColumnModel().getColumnCount() > 0) {
            taskJTable.getColumnModel().getColumn(0).setResizable(false);
            taskJTable.getColumnModel().getColumn(1).setResizable(false);
            taskJTable.getColumnModel().getColumn(2).setResizable(false);
            taskJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, 1020, 212));

        jLabel1.setText("Workload");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 263, -1, -1));
        add(workloadJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 258, 115, -1));

        assignJButton.setText("Assign");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 98, -1));

        mytaskJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Medicine Name", "Workload", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(mytaskJTable);
        if (mytaskJTable.getColumnModel().getColumnCount() > 0) {
            mytaskJTable.getColumnModel().getColumn(0).setResizable(false);
            mytaskJTable.getColumnModel().getColumn(1).setResizable(false);
            mytaskJTable.getColumnModel().getColumn(2).setResizable(false);
            mytaskJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 361, 1020, 212));

        completeJButton.setText("Complete");
        completeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeJButtonActionPerformed(evt);
            }
        });
        add(completeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 579, 98, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(231, 81, 86));
        jLabel2.setText("Company Produce Task");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(231, 81, 86));
        jLabel3.setText("My Produce Task");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 327, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("/Users/dongqi/Pictures/Flaticon/my-icons-collection (2)/png/clipboard.png")); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, -1, 640));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resourses/medicine.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 770, -1, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = taskJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MedicineProduceTask task = (MedicineProduceTask) taskJTable.getValueAt(selectedRow, 1);
        MedicineProduceTask mytask = new MedicineProduceTask();
        int workload = Integer.parseInt(workloadJTextField.getText());
        if(workload <=0){
            JOptionPane.showMessageDialog(null, "Invalid workload!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }
        task.setRemaining(task.getRemaining() - workload);
        mytask.setAmount(workload);
        mytask.setMedicine(task.getMedicine());
        mytask.setStatus("Producing");
        account.getWorkQueue().getWorkRequestCatalog().add(mytask);
        workloadJTextField.setText("");
        populateTaskTable();
        populateMyTaskTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void completeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = mytaskJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        MedicineProduceTask task = (MedicineProduceTask) mytaskJTable.getValueAt(selectedRow, 1);
        if(!task.getStatus().equals("Completed")){
            task.setStatus("Completed");
            MedicineStock stock = new MedicineStock();
            stock.setMedicine(task.getMedicine());
            stock.setAmount((int) mytaskJTable.getValueAt(selectedRow, 2));
            enterprise.addStock(stock);
            //account.getWorkQueue().getWorkRequestCatalog().remove(task);
            populateMyTaskTable();
            populateTaskTable();
        }
        
    }//GEN-LAST:event_completeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton completeJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable mytaskJTable;
    private javax.swing.JTable taskJTable;
    private javax.swing.JTextField workloadJTextField;
    // End of variables declaration//GEN-END:variables
}
