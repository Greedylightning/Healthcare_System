/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalEnterpriseAdminWorkArea;

import business.employee.Employee;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.role.PatientRole;
import business.role.Role;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zack
 */
public class ManageOrganizationChiefJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrganizationChiefJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    public ManageOrganizationChiefJPanel(JPanel userProcessContainer,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateOrganizationTable();
        populateEmployeeTable();
    }

    public void populateOrganizationTable(){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        model.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationCatalog().getOrganizationCatalog()){
            if(!organization.getHospitalOrganizationType().equals(Organization.HospitalOrganizationType.Patient)){
                Object[] row = new Object[3];
                row[0] = organization.getName();
                row[1] = organization.getHospitalOrganizationType();
                row[2] = organization.getOrganizationChief();
                model.addRow(row);
            }
           
        }
    }
    
    public void populateEmployeeTable(){
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();
        model.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationCatalog().getOrganizationCatalog()){
            if(!organization.getHospitalOrganizationType().equals(Organization.HospitalOrganizationType.Patient)){
                for(UserAccount userAccount : organization.getUserAccountCatalog().getUserAccountCatalog()){
                    if(!userAccount.getRole().equals(new PatientRole())){
                        Object[] row = new Object[3];
                        row[0] = userAccount.getEmployee().getEmployeeID();
                        row[1] = userAccount.getEmployee().getName();
                        row[2] = userAccount.getRole();
                        model.addRow(row);
                    } 
                }
            }     
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        revokeJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 46));

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization Name", "Organization Type", "Organization Chief"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
            organizationJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, 123));

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(employeeJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 142));

        assignJButton.setText("Assign");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, -1, -1));

        revokeJButton.setText("Revoke");
        revokeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revokeJButtonActionPerformed(evt);
            }
        });
        add(revokeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        EnterpriseSystemAdminWorkAreaJPanel sysAdminwjp = (EnterpriseSystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        // TODO add your handling code here:
        int selectedOrganization = organizationJTable.getSelectedRow();
        int selectedEmployee = employeeJTable.getSelectedRow();
        if(selectedEmployee < 0 || selectedOrganization < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String oname =  (String) organizationJTable.getValueAt(selectedOrganization, 0);
        String ename = (String) employeeJTable.getValueAt(selectedEmployee, 1);
        enterprise.getSelectedOrganization(oname).setOrganizationChief(ename);
        populateEmployeeTable();
        populateOrganizationTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void revokeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revokeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedOrganization = organizationJTable.getSelectedRow();
         if(selectedOrganization < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String oname =  (String) organizationJTable.getValueAt(selectedOrganization, 0);
        enterprise.getSelectedOrganization(oname).setOrganizationChief(null);
        populateEmployeeTable();
        populateOrganizationTable();
    }//GEN-LAST:event_revokeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JButton revokeJButton;
    // End of variables declaration//GEN-END:variables
}
