/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientWorkArea;

import business.enterprise.Enterprise;
import business.organization.DoctorOrganization;
import business.organization.Organization;
import business.organization.PatientOrganization;
import business.useraccount.UserAccount;
import business.workqueue.PatientResultRequest;
import business.workqueue.WorkRequest;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zack
 */
public class PatientWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    PatientOrganization organization;
    Enterprise enterprise;
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    public PatientWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, PatientOrganization organization,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        populateTable();
        populateAppointTable();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)JTable.getModel();
        model.setRowCount(0);
        for(WorkRequest workRequest : account.getWorkQueue().getWorkRequestCatalog()){
            Object[] row = new Object[3];
            row[0] = format.format(workRequest.getResolveDate());
            row[1] = workRequest.getSender().getEmployee().getName();
            row[2] = workRequest.getMessage();
            model.addRow(row);
        }
    }
    
    public void populateAppointTable(){
        DefaultTableModel model = (DefaultTableModel)appointJTable.getModel();
        model.setRowCount(0);
        for(Organization organization : enterprise.getOrganizationCatalog().getOrganizationCatalog()){
            if(organization.getHospitalOrganizationType().equals(Organization.HospitalOrganizationType.Doctor)){
                for(UserAccount ua : organization.getUserAccountCatalog().getUserAccountCatalog()){
                    Object[] row = new Object[3];
                    row[0] = organization.getName();
                    row[1] = organization.getHospitalOrganizationType();
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        appointJTable = new javax.swing.JTable();
        appointJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Doctor Name", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTable);
        if (JTable.getColumnModel().getColumnCount() > 0) {
            JTable.getColumnModel().getColumn(0).setResizable(false);
            JTable.getColumnModel().getColumn(1).setResizable(false);
            JTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 720, 195));

        appointJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization Name", "Organization Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(appointJTable);
        if (appointJTable.getColumnModel().getColumnCount() > 0) {
            appointJTable.getColumnModel().getColumn(0).setResizable(false);
            appointJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 720, 161));

        appointJButton.setText("Appoint");
        appointJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointJButtonActionPerformed(evt);
            }
        });
        add(appointJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(140, 227, 226));
        jLabel1.setText("My Treatment History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(140, 227, 226));
        jLabel2.setText("Appointment");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resourses/patient-robe.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, -10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void appointJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = appointJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String oname = (String) appointJTable.getValueAt(selectedRow, 0);
        Organization organization = null;
        for(Organization o : enterprise.getOrganizationCatalog().getOrganizationCatalog()){
            if(o.getName().equals(oname)){
                organization = o;
                break;
            }
        }
        
        WorkRequest request = new WorkRequest();
        request.setSender(account);
        request.setRequestDate(new Date());
        
        if(organization != null){
            organization.getWorkQueue().getWorkRequestCatalog().add(request);
            JOptionPane.showMessageDialog(null, "Appointed!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_appointJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton appointJButton;
    private javax.swing.JTable appointJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
